#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CC = gcc.exe
CXX = g++.exe
AR = ar.exe
LD = g++.exe
WINDRES = windres.exe

INC = -Iinclude
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_WINDOWSRELEASE = $(INC) -Iinclude
CFLAGS_WINDOWSRELEASE = $(CFLAGS)
RESINC_WINDOWSRELEASE = $(RESINC)
RCFLAGS_WINDOWSRELEASE = $(RCFLAGS)
LIBDIR_WINDOWSRELEASE = $(LIBDIR)
LIB_WINDOWSRELEASE = $(LIB)
LDFLAGS_WINDOWSRELEASE = $(LDFLAGS) -static
OBJDIR_WINDOWSRELEASE = .objs
DEP_WINDOWSRELEASE = 
OUT_WINDOWSRELEASE = lib\\libJSGF_Plus_Plus.a

OBJ_WINDOWSRELEASE = $(OBJDIR_WINDOWSRELEASE)\\src\\unparsedsection.o $(OBJDIR_WINDOWSRELEASE)\\src\\token.o $(OBJDIR_WINDOWSRELEASE)\\src\\tag.o $(OBJDIR_WINDOWSRELEASE)\\src\\sequence.o $(OBJDIR_WINDOWSRELEASE)\\src\\rulereference.o $(OBJDIR_WINDOWSRELEASE)\\src\\rule.o $(OBJDIR_WINDOWSRELEASE)\\src\\requiredgrouping.o $(OBJDIR_WINDOWSRELEASE)\\src\\plusoperator.o $(OBJDIR_WINDOWSRELEASE)\\src\\optionalgrouping.o $(OBJDIR_WINDOWSRELEASE)\\src\\matchresult.o $(OBJDIR_WINDOWSRELEASE)\\src\\matchinfo.o $(OBJDIR_WINDOWSRELEASE)\\src\\kleenestar.o $(OBJDIR_WINDOWSRELEASE)\\src\\grammar.o $(OBJDIR_WINDOWSRELEASE)\\src\\expansion.o $(OBJDIR_WINDOWSRELEASE)\\src\\alternativeset.o

all: windowsrelease

clean: clean_windowsrelease

before_windowsrelease: 
	cmd /c if not exist lib md lib
	cmd /c if not exist $(OBJDIR_WINDOWSRELEASE)\\src md $(OBJDIR_WINDOWSRELEASE)\\src

after_windowsrelease: 

windowsrelease: before_windowsrelease out_windowsrelease after_windowsrelease

out_windowsrelease: before_windowsrelease $(OBJ_WINDOWSRELEASE) $(DEP_WINDOWSRELEASE)
	$(AR) rcs $(OUT_WINDOWSRELEASE) $(OBJ_WINDOWSRELEASE)

$(OBJDIR_WINDOWSRELEASE)\\src\\unparsedsection.o: src\\unparsedsection.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\unparsedsection.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\unparsedsection.o

$(OBJDIR_WINDOWSRELEASE)\\src\\token.o: src\\token.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\token.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\token.o

$(OBJDIR_WINDOWSRELEASE)\\src\\tag.o: src\\tag.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\tag.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\tag.o

$(OBJDIR_WINDOWSRELEASE)\\src\\sequence.o: src\\sequence.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\sequence.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\sequence.o

$(OBJDIR_WINDOWSRELEASE)\\src\\rulereference.o: src\\rulereference.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\rulereference.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\rulereference.o

$(OBJDIR_WINDOWSRELEASE)\\src\\rule.o: src\\rule.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\rule.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\rule.o

$(OBJDIR_WINDOWSRELEASE)\\src\\requiredgrouping.o: src\\requiredgrouping.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\requiredgrouping.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\requiredgrouping.o

$(OBJDIR_WINDOWSRELEASE)\\src\\plusoperator.o: src\\plusoperator.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\plusoperator.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\plusoperator.o

$(OBJDIR_WINDOWSRELEASE)\\src\\optionalgrouping.o: src\\optionalgrouping.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\optionalgrouping.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\optionalgrouping.o

$(OBJDIR_WINDOWSRELEASE)\\src\\matchresult.o: src\\matchresult.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\matchresult.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\matchresult.o

$(OBJDIR_WINDOWSRELEASE)\\src\\matchinfo.o: src\\matchinfo.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\matchinfo.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\matchinfo.o

$(OBJDIR_WINDOWSRELEASE)\\src\\kleenestar.o: src\\kleenestar.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\kleenestar.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\kleenestar.o

$(OBJDIR_WINDOWSRELEASE)\\src\\grammar.o: src\\grammar.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\grammar.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\grammar.o

$(OBJDIR_WINDOWSRELEASE)\\src\\expansion.o: src\\expansion.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\expansion.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\expansion.o

$(OBJDIR_WINDOWSRELEASE)\\src\\alternativeset.o: src\\alternativeset.cpp
	$(CXX) $(CFLAGS_WINDOWSRELEASE) $(INC_WINDOWSRELEASE) -c src\\alternativeset.cpp -o $(OBJDIR_WINDOWSRELEASE)\\src\\alternativeset.o

clean_windowsrelease: 
	cmd /c del /f $(OBJ_WINDOWSRELEASE) $(OUT_WINDOWSRELEASE)
	cmd /c rd lib
	cmd /c rd $(OBJDIR_WINDOWSRELEASE)\\src

virtual_release: linuxrelease windowsrelease

.PHONY: before_windowsrelease after_windowsrelease clean_windowsrelease

