#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -Iinclude
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_LINUXRELEASE = $(INC) -Iinclude
CFLAGS_LINUXRELEASE = $(CFLAGS)
RESINC_LINUXRELEASE = $(RESINC)
RCFLAGS_LINUXRELEASE = $(RCFLAGS)
LIBDIR_LINUXRELEASE = $(LIBDIR)
LIB_LINUXRELEASE = $(LIB)
LDFLAGS_LINUXRELEASE = $(LDFLAGS)
OBJDIR_LINUXRELEASE = .objs
DEP_LINUXRELEASE = 
OUT_LINUXRELEASE = lib/libJSGF_Plus_Plus.a

OBJ_LINUXRELEASE = $(OBJDIR_LINUXRELEASE)/src/unparsedsection.o $(OBJDIR_LINUXRELEASE)/src/token.o $(OBJDIR_LINUXRELEASE)/src/tag.o $(OBJDIR_LINUXRELEASE)/src/sequence.o $(OBJDIR_LINUXRELEASE)/src/rulereference.o $(OBJDIR_LINUXRELEASE)/src/rule.o $(OBJDIR_LINUXRELEASE)/src/requiredgrouping.o $(OBJDIR_LINUXRELEASE)/src/plusoperator.o $(OBJDIR_LINUXRELEASE)/src/optionalgrouping.o $(OBJDIR_LINUXRELEASE)/src/matchresult.o $(OBJDIR_LINUXRELEASE)/src/matchinfo.o $(OBJDIR_LINUXRELEASE)/src/kleenestar.o $(OBJDIR_LINUXRELEASE)/src/grammar.o $(OBJDIR_LINUXRELEASE)/src/expansion.o $(OBJDIR_LINUXRELEASE)/src/alternativeset.o

all: linuxrelease

clean: clean_linuxrelease

before_linuxrelease: 
	test -d lib || mkdir -p lib
	test -d $(OBJDIR_LINUXRELEASE)/src || mkdir -p $(OBJDIR_LINUXRELEASE)/src

after_linuxrelease: 

linuxrelease: before_linuxrelease out_linuxrelease after_linuxrelease

out_linuxrelease: before_linuxrelease $(OBJ_LINUXRELEASE) $(DEP_LINUXRELEASE)
	$(AR) rcs $(OUT_LINUXRELEASE) $(OBJ_LINUXRELEASE)

$(OBJDIR_LINUXRELEASE)/src/unparsedsection.o: src/unparsedsection.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/unparsedsection.cpp -o $(OBJDIR_LINUXRELEASE)/src/unparsedsection.o

$(OBJDIR_LINUXRELEASE)/src/token.o: src/token.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/token.cpp -o $(OBJDIR_LINUXRELEASE)/src/token.o

$(OBJDIR_LINUXRELEASE)/src/tag.o: src/tag.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/tag.cpp -o $(OBJDIR_LINUXRELEASE)/src/tag.o

$(OBJDIR_LINUXRELEASE)/src/sequence.o: src/sequence.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/sequence.cpp -o $(OBJDIR_LINUXRELEASE)/src/sequence.o

$(OBJDIR_LINUXRELEASE)/src/rulereference.o: src/rulereference.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/rulereference.cpp -o $(OBJDIR_LINUXRELEASE)/src/rulereference.o

$(OBJDIR_LINUXRELEASE)/src/rule.o: src/rule.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/rule.cpp -o $(OBJDIR_LINUXRELEASE)/src/rule.o

$(OBJDIR_LINUXRELEASE)/src/requiredgrouping.o: src/requiredgrouping.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/requiredgrouping.cpp -o $(OBJDIR_LINUXRELEASE)/src/requiredgrouping.o

$(OBJDIR_LINUXRELEASE)/src/plusoperator.o: src/plusoperator.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/plusoperator.cpp -o $(OBJDIR_LINUXRELEASE)/src/plusoperator.o

$(OBJDIR_LINUXRELEASE)/src/optionalgrouping.o: src/optionalgrouping.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/optionalgrouping.cpp -o $(OBJDIR_LINUXRELEASE)/src/optionalgrouping.o

$(OBJDIR_LINUXRELEASE)/src/matchresult.o: src/matchresult.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/matchresult.cpp -o $(OBJDIR_LINUXRELEASE)/src/matchresult.o

$(OBJDIR_LINUXRELEASE)/src/matchinfo.o: src/matchinfo.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/matchinfo.cpp -o $(OBJDIR_LINUXRELEASE)/src/matchinfo.o

$(OBJDIR_LINUXRELEASE)/src/kleenestar.o: src/kleenestar.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/kleenestar.cpp -o $(OBJDIR_LINUXRELEASE)/src/kleenestar.o

$(OBJDIR_LINUXRELEASE)/src/grammar.o: src/grammar.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/grammar.cpp -o $(OBJDIR_LINUXRELEASE)/src/grammar.o

$(OBJDIR_LINUXRELEASE)/src/expansion.o: src/expansion.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/expansion.cpp -o $(OBJDIR_LINUXRELEASE)/src/expansion.o

$(OBJDIR_LINUXRELEASE)/src/alternativeset.o: src/alternativeset.cpp
	$(CXX) $(CFLAGS_LINUXRELEASE) $(INC_LINUXRELEASE) -c src/alternativeset.cpp -o $(OBJDIR_LINUXRELEASE)/src/alternativeset.o

clean_linuxrelease: 
	rm -f $(OBJ_LINUXRELEASE) $(OUT_LINUXRELEASE)
	rm -rf lib
	rm -rf $(OBJDIR_LINUXRELEASE)/src

virtual_release: linuxrelease windowsrelease

.PHONY: before_linuxrelease after_linuxrelease clean_linuxrelease

